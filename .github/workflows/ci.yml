name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build and test
        run: mvn clean verify

      - name: Run SonarQube Analysis
#        uses: sonarsource/sonarqube-scan-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: https://sonarcloud.io
#        with:
#          args: >
#            -Dsonar.projectKey=VuPham252_ci-cd
#            -Dsonar.organization=vupham252
#            -Dsonar.java.binaries=target/classes
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=VuPham252_ci-cd -Dsonar.organization=vupham252 -Dsonar.host.url=https://sonarcloud.io -Dsonar.java.binaries=target/classes

#      - name: Run Trivy Security Scan
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'my-dockerhub-username/my-app:${{ github.sha }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#
      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ci-cd:latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ci-cd:latest


#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up kubectl
#        uses: azure/setup-kubectl@v3
#
#      - name: Configure kubeconfig
#        run: |
#          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
#          export KUBECONFIG=kubeconfig.yaml
#
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl set image deployment/my-app my-app=my-dockerhub-username/my-app:${{ github.sha }} -n my-namespace
#          kubectl apply -f k8s/
#
#      - name: Verify Deployment
#        run: kubectl rollout status deployment/my-app -n my-namespace